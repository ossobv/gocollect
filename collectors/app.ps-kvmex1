#!/bin/bash
# vim: set ts=8 sw=4 sts=4 et ai:
# LABELS: optional
# REQUIRES: bash(bash)
# REQUIRES: procps(ps)
# REQUIRES: sysvinit-utils(pidof)

has_key() {
	local e
	for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
	return 1
}

valtodict() {
	for kv in `echo "$*" | tr , ' '`; do
		IFS='=' arr=($kv)
		key=${arr[0]}
		value=${arr[1]}
		if test -z "$value"; then
			value=true
		else
			value="\"$value\""
		fi
		echo -n ",\"$key\":$value"
	done | sed -e 's/^,/{/;s/$/}/'
}

echo "["
n=0
ps h -o cmd -p `pidof kvm qemu-system-x86_64 | tr ' ' ,` 2>/dev/null | while read kvmcmd; do
	all='*'
	optkey=
	test $n -gt 0 && echo -n ,
	n=$((n+1))
	used_keys=()
	n2=0
	for cmd in $kvmcmd; do
		n2=$((n2+1))
		case $cmd in
		$all)
			echo -n "{\"argv0\":\"$cmd\""
			bin=$cmd
			all=
			;;
		-*)
			test -n "$optkey" && echo -n ",\"$optkey\":true"
			optkey="${cmd:1}"
			has_key "$optkey" "${used_keys[@]}" && optkey="${optkey}_${n2}"
			used_keys+=($optkey)
			;;
		*)
			echo -n ",\"$optkey\":`valtodict "$cmd"`"
			optkey=
			;;
		esac
	done
	test -n "$optkey" && echo -n ",\"$optkey\":true"
	echo ",\"argv_all\":\"$kvmcmd\"}"
done
echo "]"
