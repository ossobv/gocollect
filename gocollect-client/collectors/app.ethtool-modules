#!/bin/sh
# vim: set ts=8 sw=4 sts=4 et ai:
# LABELS: optional
# REQUIRES: ethtool(ethtool)

ethtool=$(which ethtool 2>/dev/null)
test -z "$ethtool" && exit 0  # no ethtool

ethtool_module() {
    local link=$1
    local prefix=$2
    local val
    if val=$(ethtool -m "$link" 2>/dev/null) && test -n "$val"; then
        echo "$prefix{\"Device Identifier\": \"$link\""
        echo "$val" | sed -e '
          /Laser tx bias current/d
          /Transmit avg optical power/d
          /Rcvr signal avg optical power/d
          s/"//g;s/[[:blank:]]\+/ /g;s/^ //;s/ $//
          s/^\([^:]*\) : *\(.*\)/,"\1": "\2"/
        '
        echo "}"
    else
        echo "$link: not readable" >&2
        false
    fi
}

# Only read devices that are UP. Otherwise we may get errors like:
# > i40e 0000:67:00.0 eno1: Module EEPROM memory read not supported.
# >   Please update the NVM image.
# > i40e 0000:67:00.1 eno2: Module EEPROM memory read not supported.
# >   Please update the NVM image.
# > mlx5_core 0000:01:00.1: mlx5_query_module_id:318:(pid 3434267):
# >   query_mcia_reg failed: status: 0x3
links=$(ip link | sed '/^[0-9]*:.* UP /!d;s/^[^:]*: \([^@:]*\).*/\1/' |
        sort -V)
comma=
echo '['
for link in $links; do
    if ethtool_module "$link" $comma 2>/dev/null; then
        comma=,
    fi
done
echo ']'
